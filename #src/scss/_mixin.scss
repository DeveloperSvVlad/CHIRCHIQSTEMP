
// Адаптивное свойство (формула)
$maxWidth: 1920;
$maxWidthContainer: 1280;

 @mixin adaptiv-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        // Только если меньше ширины контейнера
      #{$property}: $startSize + px;
      @media (max-width: #{$maxWidthContainer + px}) {
          #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
      }
      // Только больше минимальной ширины контейнера
    } 
}


@mixin font($font_name, $file_name, $weight, $style) {
    @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}

@mixin burger {
  @media (max-width: $breakpoints-1) {
       display: block;
       position: relative;
       width: 38px;
       height: 38px;
       z-index: 100;
       background-color: transparent;
        span {
           top: 17px; 
           right: 0;
           position: absolute; 
           width: 100%;
           height: 3px; 
           background-color: #000000;
           &:first-child { 
               top: 9px;
            }
           &:last-child{
               top: auto; 
               bottom: 10px; 
               width: 100%;
               right: 0;
          }
          transition: var(--transition);
       }
       &.active {
           span{
               transform: scale(0);
               &:first-child{
                   transform: rotate(-42deg);
                   top: 19px;
               }
               &:last-child{
                   transform: rotate(42deg);
                   bottom: 16px;
                   width: 100%;
               }
           }      
      }
}
}

